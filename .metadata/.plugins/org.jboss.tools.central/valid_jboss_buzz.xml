<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>How to debug where a function returns using LLDB from the command line</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/G3PjIDUpY2A/" /><category term="C" /><category term="C++" /><category term="clang/LLVM" /><category term="c/c++" /><category term="Debuggers" /><category term="lldb" /><category term="llvm toolset" /><author><name>Konrad Kleine</name></author><id>https://developers.redhat.com/blog/?p=624907</id><updated>2019-09-11T07:00:55Z</updated><published>2019-09-11T07:00:55Z</published><content type="html">&lt;p&gt;I often find myself in a situation when I want to know where a function returns. There&amp;#8217;s no need to know the return value, as this may be the same for multiple code paths (e.g., &lt;code&gt;nullptr&lt;/code&gt; if something went wrong). It is embarrassing, but I sometimes have put &lt;code&gt;fprintf(stderr, "T1");&lt;/code&gt; in my code just to follow which path the execution took. Needless to say, this behavior requires manual editing and recompilation and should be avoided if possible.&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s a way to elegantly debug where a function returns using &lt;code&gt;&lt;a href="https://lldb.llvm.org/"&gt;lldb&lt;/a&gt;&lt;/code&gt; from the command line.&lt;/p&gt; &lt;p&gt;&lt;span id="more-624907"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Consider this &lt;code&gt;test.cpp&lt;/code&gt; program and all you want to do is find out where the function &lt;code&gt;foo&lt;/code&gt; returns:&lt;/p&gt; &lt;pre&gt;int foo(int argc) { switch (argc) { case 1: return 1; case 2: return 2; case 3: return 3; } return -1; } int main(int argc, char *argv[]) { return foo(argc); } &lt;/pre&gt; &lt;p&gt;Note that there are five &lt;code&gt;return&lt;/code&gt; statements in this code, but we only want to know which of the four inside of &lt;code&gt;foo&lt;/code&gt; are being hit.&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s start by compiling the above program with debug symbols:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;clang -g test.cpp&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;To get to know where &lt;code&gt;foo&lt;/code&gt; returns, you can run the following command.&lt;/p&gt; &lt;pre&gt;lldb -b -o "br set -X foo -p return" -o r ./a.out -- hello world&lt;/pre&gt; &lt;ol&gt; &lt;li&gt;The &lt;code&gt;-b&lt;/code&gt; toggles on batch mode. I find this handy because it lets you execute your program in a fire-and-forget fashion without leaving you in the debugger when your program is done.&lt;/li&gt; &lt;li&gt;The &lt;code&gt;-o "br set -X foo -p return"&lt;/code&gt; sets a breakpoint on the pattern return inside the function &lt;code&gt;foo&lt;/code&gt;. Note that a breakpoint is limited only to the return statements inside the function &lt;code&gt;foo&lt;/code&gt; (we have four, not five locations).&lt;/li&gt; &lt;li&gt;The &lt;code&gt;-o r&lt;/code&gt; runs the program and stops at the breakpoint inside &lt;code&gt;foo&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Everything after the &lt;code&gt;--&lt;/code&gt; is passed to our program &lt;code&gt;./a,out&lt;/code&gt; as arguments.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Here you see the effect:&lt;/p&gt; &lt;pre&gt;(lldb) target create "./a.out" Current executable set to './a.out' (x86_64). (lldb) settings set -- target.run-args "hello" "world" (lldb) br set -X foo -p return Breakpoint 1: 4 locations. (lldb) r Process 7542 stopped * thread #1, name = 'a.out', stop reason = breakpoint 1.3 frame #0: 0x0000000000401170 a.out`foo(argc=3) at test.cpp:8:5 5 case 2: 6 return 2; 7 case 3: -&amp;#62; 8 return 3; 9 } 10 return -1; 11 } Process 7542 launched: '/home/kkleine/a.out' (x86_64) &lt;/pre&gt; &lt;p&gt;I hope you like this tip. For more useful LLDB tips on breakpoints, please visit this page: &lt;a href="https://lldb.llvm.org/use/tutorial.html#setting-breakpoints"&gt;https://lldb.llvm.org/use/tutorial.html#setting-breakpoints&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F11%2Fhow-to-debug-where-a-function-returns-using-lldb-from-the-command-line%2F&amp;#38;linkname=How%20to%20debug%20where%20a%20function%20returns%20using%20LLDB%20from%20the%20command%20line" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F11%2Fhow-to-debug-where-a-function-returns-using-lldb-from-the-command-line%2F&amp;#38;linkname=How%20to%20debug%20where%20a%20function%20returns%20using%20LLDB%20from%20the%20command%20line" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F11%2Fhow-to-debug-where-a-function-returns-using-lldb-from-the-command-line%2F&amp;#38;linkname=How%20to%20debug%20where%20a%20function%20returns%20using%20LLDB%20from%20the%20command%20line" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F11%2Fhow-to-debug-where-a-function-returns-using-lldb-from-the-command-line%2F&amp;#38;linkname=How%20to%20debug%20where%20a%20function%20returns%20using%20LLDB%20from%20the%20command%20line" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F11%2Fhow-to-debug-where-a-function-returns-using-lldb-from-the-command-line%2F&amp;#38;linkname=How%20to%20debug%20where%20a%20function%20returns%20using%20LLDB%20from%20the%20command%20line" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F11%2Fhow-to-debug-where-a-function-returns-using-lldb-from-the-command-line%2F&amp;#38;linkname=How%20to%20debug%20where%20a%20function%20returns%20using%20LLDB%20from%20the%20command%20line" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F11%2Fhow-to-debug-where-a-function-returns-using-lldb-from-the-command-line%2F&amp;#38;linkname=How%20to%20debug%20where%20a%20function%20returns%20using%20LLDB%20from%20the%20command%20line" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F11%2Fhow-to-debug-where-a-function-returns-using-lldb-from-the-command-line%2F&amp;#038;title=How%20to%20debug%20where%20a%20function%20returns%20using%20LLDB%20from%20the%20command%20line" data-a2a-url="https://developers.redhat.com/blog/2019/09/11/how-to-debug-where-a-function-returns-using-lldb-from-the-command-line/" data-a2a-title="How to debug where a function returns using LLDB from the command line"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/11/how-to-debug-where-a-function-returns-using-lldb-from-the-command-line/"&gt;How to debug where a function returns using LLDB from the command line&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/G3PjIDUpY2A" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;I often find myself in a situation when I want to know where a function returns. There&amp;#8217;s no need to know the return value, as this may be the same for multiple code paths (e.g., nullptr if something went wrong). It is embarrassing, but I sometimes have put fprintf(stderr, "T1"); in my code just to [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/11/how-to-debug-where-a-function-returns-using-lldb-from-the-command-line/"&gt;How to debug where a function returns using LLDB from the command line&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">624907</post-id><dc:creator>Konrad Kleine</dc:creator><dc:date>2019-09-11T07:00:55Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/09/11/how-to-debug-where-a-function-returns-using-lldb-from-the-command-line/</feedburner:origLink></entry><entry><title>Understanding Red Hat OpenShiftâ€™s Application Monitoring Operator</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/52wy9WBUq8M/" /><category term="Containers" /><category term="Microservices" /><category term="OpenShift" /><category term="Red Hat OpenShift Container Platform" /><category term="grafana" /><category term="prometheus" /><category term="Red Hat OpenShift" /><author><name>Jose Silva</name></author><id>https://developers.redhat.com/blog/?p=622587</id><updated>2019-09-10T07:00:45Z</updated><published>2019-09-10T07:00:45Z</published><content type="html">&lt;p&gt;Monitoring systems are usually composed of three layers: a database layer that hosts metrics data, a layer to display the stored metric data graphically in dashboards, and an alerting layer to send out notifications via methods such as email, on-call notification systems, and chat platforms. This article presents an overview of the components used in &lt;a href="http://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt;&amp;#8216;s Application Monitoring Operator, how to install them using the Operator, and an example of the Operator in action.&lt;span id="more-622587"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Application monitoring stack components&lt;/h2&gt; &lt;p&gt;The OpenShift &lt;a href="https://github.com/integr8ly/application-monitoring-operator" target="_blank" rel="noopener noreferrer"&gt;Application Monitoring Operator&lt;/a&gt; used in Red Hat Integration products aims to cover all of those layers by installing a set of tools to build a monitoring system on the cluster. This monitoring stack consists of three famous open source community components that are installed by deploying the Grafana and Prometheus Operators: &lt;a href="https://grafana.com" target="_blank" rel="noopener noreferrer"&gt;Grafana&lt;/a&gt;, &lt;a href="https://prometheus.io" target="_blank" rel="noopener noreferrer"&gt;Prometheus&lt;/a&gt;, and &lt;a href="https://prometheus.io/docs/alerting/alertmanager/" target="_blank" rel="noopener noreferrer"&gt;Alertmanager&lt;/a&gt;.&lt;/p&gt; &lt;h3 id="prometheus"&gt;Prometheus&lt;/h3&gt; &lt;p&gt;Prometheus is an open source project designed to monitor and provide alerts in a microservices infrastructure. Prometheus supports scraping application instances to collect metrics and generate graphs. These metrics are exposed by services through HTTP(S), and Prometheus periodically scraps target-defined endpoints and writes the collected samples into its database.&lt;/p&gt; &lt;p&gt;This tool comes with a functional query language called &lt;a href="https://prometheus.io/docs/prometheus/latest/querying/basics/" target="_blank" rel="noopener noreferrer"&gt;PromQL&lt;/a&gt; that lets users select and aggregate time series data in real time. The outcome of a query can be exposed as a graph or tabula data, or consumed via the HTTP API.&lt;/p&gt; &lt;p&gt;The Application Monitoring Operator uses theÂ &lt;a href="https://coreos.com/blog/the-prometheus-operator.html" target="_blank" rel="noopener noreferrer"&gt;Prometheus Operator&lt;/a&gt; to install instances of Prometheus in a simple, declarative way to create, configure, and manage Prometheus instances on the cluster.&lt;/p&gt; &lt;h3 id="alertmanager"&gt;Alertmanager&lt;/h3&gt; &lt;p&gt;Here is where the alerts sent from Prometheus servers are handled. Alertmanager is responsible for receiving alerts and sending them out to notify the end user. An alerting system is useful to warn about a new problem, allowing teams to take action to prevent major issues or system downtime.&lt;/p&gt; &lt;p&gt;When alerts are sent to Alertmanager, they can be filtered and grouped according to their severity, and then the system decides which action to takeâ€”that can either be to go silentÂ or to notify a receiver (email, chat app, calls, etc.).&lt;/p&gt; &lt;h3 id="grafana"&gt;Grafana&lt;/h3&gt; &lt;p&gt;When it comes to monitoring systems, the visualization layer helps teams detect and take action when anomalous behavior occurs. In the Application Monitoring Operator, we use Grafana as the visualization tool to display time series data collected from Prometheus in theÂ dashboard format.&lt;/p&gt; &lt;p&gt;Grafana is installed using the Grafana Operator Custom Resource (CR), which can deploy and manage Grafana instances in the cluster.&lt;/p&gt; &lt;h2 id="installingthemonitoringoperator"&gt;Application Monitoring Operator installation&lt;/h2&gt; &lt;p&gt;After a brief introduction of each component in the application monitoring stack, letâ€™s see how they all work together by installing the Application Monitoring Operator. The first thing we need is Red Hat OpenShift cluster, which can be provided by installing Minishift on your local machine. For more information about installing Minishift, see &lt;a href="https://docs.okd.io/latest/minishift/getting-started/index.html" target="_blank" rel="noopener noreferrer"&gt;Getting Started with Minishift&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Once you have your cluster up and running, you can start deploying the Operator:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Clone the Operator from the git repository: &lt;pre&gt;$ git clone git@github.com:integr8ly/application-monitoring-operator.git&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;Log in to OpenShift with the administrator role (it is required to have admin access to the cluster to create CRDs, ClusterRoles, and ClusterRoleBindings): &lt;pre&gt;$ oc login -u system:admin&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;Install the Application Monitoring Operator using Make, which will trigger a shell script to create a new namespace on the cluster, create a new label (&lt;code&gt;monitoring-key=middleware&lt;/code&gt;), and install all of the custom resource definitions required by the stack: &lt;pre&gt;$ make cluster/install&lt;/pre&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p&gt;After running Make, all of the components are installed in a new namespace called &lt;code&gt;application-monitoring&lt;/code&gt;. To make sure the installation went well, you can check by running the following:&lt;/p&gt; &lt;pre&gt;$ oc project Using project "application-monitoring" on server "https://your-cluster-ip:8443" $ oc get pods&lt;/pre&gt; &lt;p&gt;&lt;img src="https://developers.redhat.com/blog/wp-content/uploads/2019/08/oc-get-pods.png" alt="" /&gt;&lt;/p&gt; &lt;p&gt;You should be able to access Prometheus, Grafana,Â and Alertmanager by getting their respective routes:&lt;/p&gt; &lt;pre&gt;$ oc get route&lt;/pre&gt; &lt;p&gt;&lt;img src="https://developers.redhat.com/blog/wp-content/uploads/2019/08/oc-get-routes.png" alt="" /&gt;&lt;/p&gt; &lt;p&gt;To access Openshift via the UI you may need to grant admin permission to users. To do so, run the command below:&lt;/p&gt; &lt;pre&gt;$ oc adm policy add-cluster-role-to-user admin "user_name"&lt;/pre&gt; &lt;h2 id="monitoringoperatorinaction"&gt;Application Monitoring Operator in action&lt;/h2&gt; &lt;p&gt;Now that the Application Monitoring Operator is running, letâ€™s create a project to expose metrics to Prometheus. The first thing we need to do is create a new namespace on the cluster to host the project:&lt;/p&gt; &lt;pre&gt;$ oc new-project example-prometheus-nodejs&lt;/pre&gt; &lt;p&gt;The Application Monitoring Operator uses the &lt;a href="http://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt; labeling system to discover imported custom resources (Prometheus rules, service monitors, Grafana dashboards, etc.):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;em&gt;Prometheus rules&lt;/em&gt; defineÂ a set of alert rules in Prometheus.&lt;/li&gt; &lt;li&gt;&lt;em&gt;Service monitors&lt;/em&gt;Â defineÂ how groups of services should be monitored, and the operator automatically configures Prometheus to scrap services according to the definition.&lt;/li&gt; &lt;li&gt;&lt;em&gt;Grafana dashboard&lt;/em&gt;Â defines dashboards to be reconciled in Grafana.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The label value can be changed on the Application Monitoring CR by changing the property &lt;code&gt;labelSelector&lt;/code&gt;.Â To create a new label called &lt;code&gt;middleware&lt;/code&gt; for our new namespace on the cluster, run:&lt;/p&gt; &lt;pre&gt;$ oc label namespace example-prometheus-nodejs monitoring-key=middleware&lt;/pre&gt; &lt;p&gt;InÂ the project we cloned&amp;#8217;s repository is a &lt;a href="https://github.com/david-martin/example-prometheus-nodejs/blob/d647b83116519b650e00401f04c8868280c47778/template.yaml" target="_blank" rel="noopener noreferrer"&gt;template file&lt;/a&gt; that we use to deploy the application, import the CRs (Prometheus rules, service monitors, Grafana dashboards, etc.) that the application monitoring stack detects, and reconcile them.&lt;/p&gt; &lt;p&gt;To deploy the application use the following command:&lt;/p&gt; &lt;pre&gt;$ oc process -f https://raw.githubusercontent.com/david-martin/example-prometheus-nodejs/master/template.yaml | oc create -f -&lt;/pre&gt; &lt;p&gt;An important thing to notice is that the Custom Resource Definition (CRD) the Grafana dashboard imported does not have the &lt;code&gt;monitoring-key=middleware&lt;/code&gt; label required for Grafana to detect and reconcile new dashboards. To add the label, run the following command:&lt;/p&gt; &lt;pre&gt;$ oc label grafanadashboard monitoring-key=middleware --all&lt;/pre&gt; &lt;p&gt;After this action, we should see a new Grafana UI dashboard showing app memory usage (among other things). You should also see a new Prometheus target in &lt;code&gt;example-prometheus-nodejs/example-prometheus-nodejs&lt;/code&gt;, and the new alertÂ role &lt;code&gt;APIHighMedianResponseTime&lt;/code&gt;.&lt;/p&gt; &lt;h3 id="additionalresources"&gt;Additional resources&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://github.com/david-martin/example-prometheus-nodejs/" target="_blank" rel="noopener noreferrer"&gt;Example application for Prometheus monitoring&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/prometheus/prometheus" target="_blank" rel="noopener noreferrer"&gt;Prometheus repository&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://prometheus.io/docs/introduction/overview/" target="_blank" rel="noopener noreferrer"&gt;Prometheus documentation&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://grafana.com/docs/" target="_blank" rel="noopener noreferrer"&gt;Grafana documentation&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_integration/2019-07/html-single/monitoring_red_hat_integration/index" target="_blank" rel="noopener noreferrer"&gt;Monitoring Red Hat integration&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F10%2Funderstanding-red-hat-openshifts-application-monitoring-operator%2F&amp;#38;linkname=Understanding%20Red%20Hat%20OpenShift%E2%80%99s%20Application%20Monitoring%20Operator" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F10%2Funderstanding-red-hat-openshifts-application-monitoring-operator%2F&amp;#38;linkname=Understanding%20Red%20Hat%20OpenShift%E2%80%99s%20Application%20Monitoring%20Operator" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F10%2Funderstanding-red-hat-openshifts-application-monitoring-operator%2F&amp;#38;linkname=Understanding%20Red%20Hat%20OpenShift%E2%80%99s%20Application%20Monitoring%20Operator" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F10%2Funderstanding-red-hat-openshifts-application-monitoring-operator%2F&amp;#38;linkname=Understanding%20Red%20Hat%20OpenShift%E2%80%99s%20Application%20Monitoring%20Operator" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F10%2Funderstanding-red-hat-openshifts-application-monitoring-operator%2F&amp;#38;linkname=Understanding%20Red%20Hat%20OpenShift%E2%80%99s%20Application%20Monitoring%20Operator" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F10%2Funderstanding-red-hat-openshifts-application-monitoring-operator%2F&amp;#38;linkname=Understanding%20Red%20Hat%20OpenShift%E2%80%99s%20Application%20Monitoring%20Operator" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F10%2Funderstanding-red-hat-openshifts-application-monitoring-operator%2F&amp;#38;linkname=Understanding%20Red%20Hat%20OpenShift%E2%80%99s%20Application%20Monitoring%20Operator" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F10%2Funderstanding-red-hat-openshifts-application-monitoring-operator%2F&amp;#038;title=Understanding%20Red%20Hat%20OpenShift%E2%80%99s%20Application%20Monitoring%20Operator" data-a2a-url="https://developers.redhat.com/blog/2019/09/10/understanding-red-hat-openshifts-application-monitoring-operator/" data-a2a-title="Understanding Red Hat OpenShiftâ€™s Application Monitoring Operator"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/10/understanding-red-hat-openshifts-application-monitoring-operator/"&gt;Understanding Red Hat OpenShift&amp;#8217;s Application Monitoring Operator&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/52wy9WBUq8M" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Monitoring systems are usually composed of three layers: a database layer that hosts metrics data, a layer to display the stored metric data graphically in dashboards, and an alerting layer to send out notifications via methods such as email, on-call notification systems, and chat platforms. This article presents an overview of the components used in [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/10/understanding-red-hat-openshifts-application-monitoring-operator/"&gt;Understanding Red Hat OpenShift&amp;#8217;s Application Monitoring Operator&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/09/10/understanding-red-hat-openshifts-application-monitoring-operator/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">622587</post-id><dc:creator>Jose Silva</dc:creator><dc:date>2019-09-10T07:00:45Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/09/10/understanding-red-hat-openshifts-application-monitoring-operator/</feedburner:origLink></entry><entry><title>5 Questions Everyone's Asking About Microservices (Question 5)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/MJaWYMdY3YE/5-questions-everyones-asking-about-microservices-question5.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="best practices" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="JBossAMQ" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-5_questions_everyone_s_asking_about_microservices_question_5</id><updated>2019-09-10T05:00:03Z</updated><published>2019-09-10T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;a href="https://1.bp.blogspot.com/-i6x1EOlxWyE/XVQFqTEqWhI/AAAAAAAAvLk/4p4gtw-bjm4BQAwWePd4zeAQ0Vbg3984ACLcBGAs/s1600/questions.jpg" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="666" data-original-width="1000" height="213" src="https://1.bp.blogspot.com/-i6x1EOlxWyE/XVQFqTEqWhI/AAAAAAAAvLk/4p4gtw-bjm4BQAwWePd4zeAQ0Vbg3984ACLcBGAs/s320/questions.jpg" width="320" /&gt;&lt;/a&gt;When discussing the development impact on existing applications while transitioning to microservices, there are five questions that keep popping up in one form or another. They are the same regardless of the size of the organization and seem to become part of strategy discussions later in the process as organizations move towards microservice architectures. &lt;br /&gt;&lt;br /&gt;These articles cover questions that everyone should ask about microservices. Their based on experiences from interactions with organizations in the process of conquering microservices for existing development and for delivering modern applications.&lt;br /&gt;&lt;br /&gt;Previously we covered four questions; &lt;a href="http://www.schabell.org/2019/08/5-questions-everyones-asking-about-microservices-question1.html" target="_blank"&gt;the performance impact of microservices&lt;/a&gt;,&amp;nbsp; a question on &lt;a href="http://www.schabell.org/2019/08/5-questions-everyones-asking-about-microservices-question2.html" target="_blank"&gt;state and monoliths&lt;/a&gt;, one about &lt;a href="https://www.schabell.org/2019/08/5-questions-everyones-asking-about-microservices-question3.html" target="_blank"&gt;data and microservices&lt;/a&gt;, and on &lt;a href="http://www.schabell.org/2019/09/5-questions-everyones-asking-about-microservices-question4.html" target="_blank"&gt;testing microservices&lt;/a&gt;.&amp;nbsp; In this fifth and final article we look at the confusion around using API management or service mesh.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;API management or service mesh&lt;/h3&gt;&amp;nbsp;In this last and final part of the series, we encounter a question that centers around confusion as to what the roles are an API gateway and a service mesh. It goes something like this:&lt;br /&gt;&lt;br /&gt;&lt;i&gt;"How would&amp;nbsp; an API gateway such as 3Scale or service mesh be used to migrate applications to a more modern way of working?"&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&amp;nbsp;First off, let's clarify that this question references Red Hat 3Scale API Management product which is an API management technology offering based on open source community projects. It's focus is very different that a service mesh technology such as &lt;a href="https://istio.io/" target="_blank"&gt;Istio&lt;/a&gt;, one of the community offerings.&lt;br /&gt;&lt;br /&gt;Now to position how API management's used, remember that we previously talked about microservice development teams functioning independently much like a business-to-business partner. These development teams have an API that's the front to their particular microservice. Using API management tooling, the development team's publishing their microservice API into their organizations managed API layer for consumption.&lt;br /&gt;&lt;br /&gt;&amp;nbsp;Looking at service mesh technology, it's concerned with microservices being able to communicate with each other in their deployment layers. Think of things like microservice discovery, load balancing, failure recovery, metrics, and monitoring. A service mesh solves the intra-microservice challenges that distributed services encounter and does it in a novel way.&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Microservices in your future?&lt;/h3&gt;Now that youâ€™ve seen the five questions that many are asking out there in the wild, did you notice some of the same questions youâ€™ve been wrestling with? Since theyâ€™re based on interactions with organizations in the process of modernizing their service layers, these questions are both actual and relevant as you're transitioning towards modern architectures for delivering applications.&lt;br /&gt;&lt;br /&gt;Don't hesitate to &lt;a href="http://www.schabell.org/2019/08/5-questions-everyones-asking-about-microservices-question1.html" target="_blank"&gt;head back to the first article in this series&lt;/a&gt; and review all the questions covered in this series. These insights should help you make good decisions, tackle the complexity of your existing monolithic applications, and move towards a fundamentally sound microservices architecture for years to come. &lt;br /&gt;&lt;br /&gt;&lt;span style="font-size: small;"&gt;&lt;i&gt;(article co-authored with &lt;a href="https://twitter.com/burrsutter" target="_blank"&gt;Burr Sutter)&amp;nbsp;&lt;/a&gt;&lt;/i&gt;&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=-74NEsGALUU:pP_YsdKE-b4:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=-74NEsGALUU:pP_YsdKE-b4:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=-74NEsGALUU:pP_YsdKE-b4:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=-74NEsGALUU:pP_YsdKE-b4:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=-74NEsGALUU:pP_YsdKE-b4:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=-74NEsGALUU:pP_YsdKE-b4:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=-74NEsGALUU:pP_YsdKE-b4:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=-74NEsGALUU:pP_YsdKE-b4:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=-74NEsGALUU:pP_YsdKE-b4:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=-74NEsGALUU:pP_YsdKE-b4:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=-74NEsGALUU:pP_YsdKE-b4:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/-74NEsGALUU" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/MJaWYMdY3YE" height="1" width="1" alt=""/&gt;</content><summary>When discussing the development impact on existing applications while transitioning to microservices, there are five questions that keep popping up in one form or another. They are the same regardless of the size of the organization and seem to become part of strategy discussions later in the process as organizations move towards microservice architectures. These articles cover questions that ever...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-09-10T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/-74NEsGALUU/5-questions-everyones-asking-about-microservices-question5.html</feedburner:origLink></entry><entry><title>Install Red Hat 3scale and configure tenants with 7 simple commands</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/vjp2dXsZ4yU/" /><category term="DevOps" /><category term="Red Hat 3scale API Management" /><category term="Red Hat SSO" /><category term="Red Hat OpenShift" /><author><name>Henrique Viecili</name></author><id>https://developers.redhat.com/blog/?p=622237</id><updated>2019-09-09T07:00:27Z</updated><published>2019-09-09T07:00:27Z</published><content type="html">&lt;p&gt;A couple weeks ago I was faced with the challenge of installing &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_3scale_api_management/2.6/"&gt;Red Hat 3scale&lt;/a&gt; and configuring its tenants using solely the command line â€” no GUI allowed. This is a rather interesting use case, so I decided to write this article and show how to do it with just seven commands!&lt;/p&gt; &lt;p&gt;(By the way, I also decided to include &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_single_sign-on/7.2/html/red_hat_single_sign-on_for_openshift/index"&gt;Red Hat Single Sign-On&lt;/a&gt; (SSO) in the mix because I want my APIs to use &lt;a href="https://openid.net/connect/"&gt;OpenID Connect&lt;/a&gt; (OIDC) for authentication. But I&amp;#8217;ll leave those commands to a future article.)&lt;span id="more-622237"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Requirements&lt;/h2&gt; &lt;p&gt;With the challenge at hand, I knew that if I were to succeed I would have to make good use of the 3scale Master API and some ingenuity. But before jumping into the solution, here are the basic requirements that need to be in place:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Access via the &lt;code&gt;oc&lt;/code&gt; CLI to an OpenShift cluster with rights to create projects (or have at least two projects created for you, one for the management and one for each tenant).&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/3scale/3scale-amp-openshift-templates"&gt;3scale OpenShift Templates&lt;/a&gt; to install 3scale components (&lt;code&gt;amp.yml&lt;/code&gt; and &lt;code&gt;apicast.yml&lt;/code&gt;).&lt;/li&gt; &lt;li&gt;Images and ImageStreams for 3scale.&lt;/li&gt; &lt;/ul&gt; &lt;blockquote&gt;&lt;p&gt;&lt;em&gt;Disclaimer: I am using Red Hat OpenShift 3.11 with 3scale v2.5. Newer versions of 3scale (2.6+) on OpenShift 4.x introduce the option of using the &lt;a href="https://github.com/3scale/3scale-operator"&gt;3scale Operator&lt;/a&gt; for installation, which is quite different from what is described here.&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;h2&gt;Commands&lt;/h2&gt; &lt;p&gt;So, here we go. Let&amp;#8217;s install 3scale and the tenant!&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In the next sections, whenever you see &lt;code&gt;${A_PLACEHOLDER_NAME}&lt;/code&gt;, it means something that needs to be replaced by a value, either self-explanatory or defined in a previous step.&lt;/p&gt; &lt;h3&gt;Command #0: Ensure you&amp;#8217;ve got the basics&lt;/h3&gt; &lt;pre&gt;# the templates git clone https://github.com/3scale/3scale-amp-openshift-templates # the access with CLI oc login ${YOUR_OCP_MASTER_CONSOLE_URL} # the projects created oc new-project 3scale-management-project oc new-project 3scale-tenant-project&lt;/pre&gt; &lt;h3&gt;Command #1: Install 3scale (management)&lt;/h3&gt; &lt;p&gt;The command below is a minimal command to install 3scale. Many other configuration parameters are available, and I highly recommend reading the &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_3scale_api_management/2.5/html/installing_3scale/onpremises-installation#deploying_3scale_on_openshift_using_a_template"&gt;installation guide&lt;/a&gt;. For the purposes of this use case, it is sufficient.&lt;/p&gt; &lt;p&gt;The &lt;code&gt;MASTER_NAME (=3scale-master)&lt;/code&gt; parameter is used as a prefix to create the URL of the 3scale Master API. In this case, the final URL should look like &lt;code&gt;3scale-master.apps.ocp.example.com&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;oc new-app --file amp.yml \ -p WILDCARD_DOMAIN=apps.ocp.example.com \ -p MASTER_NAME=3scale-master \ -n 3scale-management-project&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; The output of the command above will contain some generated tokens and secrets; take note of them. The remaining commands will use the &lt;code&gt;MASTER_ACCESS_TOKEN&lt;/code&gt; but you may need the other values in the future.&lt;/p&gt; &lt;p&gt;Once the installation triggered by the previous command completes, you can start creating the tenant with the next commands.&lt;/p&gt; &lt;h3&gt;Command #2: Create the tenant via the Master API&lt;/h3&gt; &lt;p&gt;The parameters below will use the variable &lt;code&gt;TENANT_NAME&lt;/code&gt; to represent the name of the tenant and other parameters will be derived from it. You should replace/define it with the name you want for the tenant, for example, &lt;em&gt;devblog&lt;/em&gt;.&lt;/p&gt; &lt;pre&gt;curl -X POST \ https://3scale-master.apps.ocp.example.com/master/api/providers.xml \ -d "access_token=${MASTER_ACCESS_TOKEN}" \ -d "org_name=${TENANT_NAME}-tenant" \ -d "username=${TENANT_NAME}-tenant-admin" \ --data-urlencode "email=${TENANT_NAME}@example.com" \ -d "password=${A_PASSWORD}"&lt;/pre&gt; &lt;p&gt;The Master API should return a successful response containing the XML representation of the new tenant configuration. Look for the following data within the payload:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;TENANT_ACCESS_TOKEN&lt;/code&gt; from the value of the element &lt;code&gt;/signup/access_token/value&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TENANT_ACCOUNT_ID&lt;/code&gt; from the value of the element &lt;code&gt;/signup/account/id&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TENANT_USER_ID&lt;/code&gt; from the value of the element &lt;code&gt;/signup/users/user[0]/id&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;Command #3: Activate the tenant&lt;/h3&gt; &lt;p&gt;By default, new tenants are not created active. Run the command below to activate it.&lt;/p&gt; &lt;pre&gt;curl -X PUT \ "https://3scale-master.apps.ocp.example.com/admin/api/accounts/${TENANT_ACCOUNT_ID}/users/${TENANT_USER_ID}/activate.xml" \ -d "access_token=${MASTER_ACCESS_TOKEN}"&lt;/pre&gt; &lt;h3&gt;Command #4: Create the tenant&amp;#8217;s Admin Portal route&lt;/h3&gt; &lt;p&gt;This command creates the route to configure the gateway (apicast) so it can communicate to its API Manager.&lt;/p&gt; &lt;pre&gt;oc create route edge ${TENANT_NAME}-admin \ --service=system-provider \ --hostname=${TENANT_NAME}-tenant-admin.apps.ocp.example.com \ --insecure-policy=Allow \ -n 3scale-management-project&lt;/pre&gt; &lt;p&gt;You can access the tenant&amp;#8217;s Admin Portal through this new URL with the credentials (username/password) provided in Command #2.&lt;/p&gt; &lt;h3&gt;Command #5: Create the secret with the AMP management URL&lt;/h3&gt; &lt;pre&gt;oc secret new-basicauth apicast-configuration-url-secret \ --password=https://${TENANT_ACCESS_TOKEN}@${TENANT_NAME}-tenant-admin.apps.ocp.example.com \ -n 3scale-tenant-project&lt;/pre&gt; &lt;h3&gt;Command #6: Install the tenant&amp;#8217;s API gateway (apicast)&lt;/h3&gt; &lt;p&gt;The command below installs only the apicast gateway pods. As this tenant won&amp;#8217;t handle production workloads, it uses the minimal configuration parameters recommended for non-production deployments.&lt;/p&gt; &lt;div&gt; &lt;pre&gt;oc new-app -f apicast.yml \ -p CONFIGURATION_LOADER=lazy \ -p DEPLOYMENT_ENVIRONMENT=staging \ -p CONFIGURATION_CACHE=0 \ -n 3scale-tenant-project&lt;/pre&gt; &lt;/div&gt; &lt;h3&gt;Command #7: Expose your tenant&amp;#8217;s API gateway&lt;/h3&gt; &lt;p&gt;Now you just need to create the route (URL) to expose your apicast service (the gateway) to its clients.&lt;/p&gt; &lt;pre&gt;oc create route edge \ --service=apicast \ --hostname=${TENANT_NAME}-tenant.apps.ocp.example.com \ --insecure-policy=Allow \ -n 3scale-tenant-project&lt;/pre&gt; &lt;p&gt;The APIs you create for this tenant will be exposed through this new URL.&lt;/p&gt; &lt;p&gt;To create more tenants, just repeat commands #2 to #7.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;As we move toward automating all the things, it is important to challenge ourselves not to use GUIs and instead do things the harder but more repeatable way. Getting the set of commands is just the first step for automation. Next, we can compile them in the form of a script, or even better, an Ansible playbook. The automation that such capability provides means not only that new tenants can be easily created, but also that the whole environment can be rebuilt from code.&lt;/p&gt; &lt;p&gt;Although these commands show a simple configuration of 3scale, the gist was extracted from a real-life consulting engagement when each tenant represents one of the multiple environments of a software delivery lifecycle â€” like development, testing, integration, pre-production, and production. Ultimately, this is part of a bigger picture where our customers need to have the full &lt;em&gt;API lifecycle as code&lt;/em&gt; so it can be automated.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F09%2Finstall-3scale-multitenant-in-7-commands%2F&amp;#38;linkname=Install%20Red%20Hat%203scale%20and%20configure%20tenants%20with%207%20simple%20commands" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F09%2Finstall-3scale-multitenant-in-7-commands%2F&amp;#38;linkname=Install%20Red%20Hat%203scale%20and%20configure%20tenants%20with%207%20simple%20commands" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F09%2Finstall-3scale-multitenant-in-7-commands%2F&amp;#38;linkname=Install%20Red%20Hat%203scale%20and%20configure%20tenants%20with%207%20simple%20commands" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F09%2Finstall-3scale-multitenant-in-7-commands%2F&amp;#38;linkname=Install%20Red%20Hat%203scale%20and%20configure%20tenants%20with%207%20simple%20commands" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F09%2Finstall-3scale-multitenant-in-7-commands%2F&amp;#38;linkname=Install%20Red%20Hat%203scale%20and%20configure%20tenants%20with%207%20simple%20commands" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F09%2Finstall-3scale-multitenant-in-7-commands%2F&amp;#38;linkname=Install%20Red%20Hat%203scale%20and%20configure%20tenants%20with%207%20simple%20commands" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F09%2Finstall-3scale-multitenant-in-7-commands%2F&amp;#38;linkname=Install%20Red%20Hat%203scale%20and%20configure%20tenants%20with%207%20simple%20commands" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F09%2Finstall-3scale-multitenant-in-7-commands%2F&amp;#038;title=Install%20Red%20Hat%203scale%20and%20configure%20tenants%20with%207%20simple%20commands" data-a2a-url="https://developers.redhat.com/blog/2019/09/09/install-3scale-multitenant-in-7-commands/" data-a2a-title="Install Red Hat 3scale and configure tenants with 7 simple commands"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/09/install-3scale-multitenant-in-7-commands/"&gt;Install Red Hat 3scale and configure tenants with 7 simple commands&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/vjp2dXsZ4yU" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;A couple weeks ago I was faced with the challenge of installing Red Hat 3scale and configuring its tenants using solely the command line â€” no GUI allowed. This is a rather interesting use case, so I decided to write this article and show how to do it with just seven commands! (By the way, [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/09/install-3scale-multitenant-in-7-commands/"&gt;Install Red Hat 3scale and configure tenants with 7 simple commands&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/09/09/install-3scale-multitenant-in-7-commands/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">622237</post-id><dc:creator>Henrique Viecili</dc:creator><dc:date>2019-09-09T07:00:27Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/09/09/install-3scale-multitenant-in-7-commands/</feedburner:origLink></entry><entry><title>Interacting with native libraries in .NET Core 3.0</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/k4XFvqN13yE/" /><category term=".NET Core" /><author><name>Tom Deseyn</name></author><id>https://developers.redhat.com/blog/?p=622537</id><updated>2019-09-06T13:38:43Z</updated><published>2019-09-06T13:38:43Z</published><content type="html">&lt;p&gt;&lt;code&gt;NativeLibrary&lt;/code&gt; is a new class in .NET Core 3.0 for interacting with native libraries. In this article, we&amp;#8217;ll take a closer look.&lt;/p&gt; &lt;h2&gt;DllImport&lt;/h2&gt; &lt;p&gt;.NET makes it simple to call functions from a native library using &lt;code&gt;DllImport&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;[DllImport("mylibrary")] public static extern int foo(); &lt;/pre&gt; &lt;p&gt;This code makes available the function &lt;code&gt;foo&lt;/code&gt; from the native library &lt;code&gt;mylibrary&lt;/code&gt;. This function accepts no arguments and returns an &lt;code&gt;int&lt;/code&gt;. .NET takes care of marshaling the argument types. It is possible to use managed types (like strings), which will be automagically marshaled.&lt;span id="more-622537"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;When we use this function, .NET Core tries to find &lt;code&gt;mylibrary&lt;/code&gt;. It looks in the application folder and in the system library folders. When looking, it tries variations of the name. For example, on Windows, it adds a &lt;code&gt;.dll&lt;/code&gt; extension; on Linux, it adds an &lt;code&gt;.so&lt;/code&gt; extension. The lookup also takes into account the current platform based on the &lt;a href="https://docs.microsoft.com/en-us/dotnet/core/rid-catalog" target="_blank" rel="noopener noreferrer"&gt;Runtime IDentifier&lt;/a&gt; (RID). An application can include libraries for different runtime identifiers (organized in rid-folders), and the most appropriate library will be used.&lt;/p&gt; &lt;p&gt;The main limitation of &lt;code&gt;DllImport&lt;/code&gt; is that the library name and the symbol names are fixed at compile time. In many cases, especially when you&amp;#8217;re building the library yourself and including it with the application, this limitation isn&amp;#8217;t an issue.&lt;/p&gt; &lt;h2&gt;NativeLibrary&lt;/h2&gt; &lt;p&gt;&lt;code&gt;NativeLibrary&lt;/code&gt; is a static class with only a couple of methods:&lt;/p&gt; &lt;pre&gt;void Free(IntPtr handle) IntPtr GetExport(IntPtr handle, String name) IntPtr Load(String libraryPath) IntPtr Load(String libraryName, Assembly, DllImportSearchPath?) void SetDllImportResolver(Assembly, DllImportResolver) IntPtr TryGetExport(IntPtr handle, String name, out IntPtr address) IntPtr TryLoad(String libraryPath, out IntPtr handle) IntPtr TryLoad(String libraryName, Assembly, DllImportSearchPath?, out IntPtr handle) &lt;/pre&gt; &lt;p&gt;The first thing we can do is control the library we use in the &lt;code&gt;DllImport&lt;/code&gt;, by providing a &lt;code&gt;DllImportResolver&lt;/code&gt; delegate for our assembly. The &lt;code&gt;DllImportResolver&lt;/code&gt; has the following signature:&lt;/p&gt; &lt;pre&gt;public delegate IntPtr DllImportResolver(string libraryName, Assembly assembly, DllImportSearchPath? searchPath); &lt;/pre&gt; &lt;p&gt;Its arguments provide us with the context of the &lt;code&gt;DllImport&lt;/code&gt;Â and as a return value we must provide an &lt;code&gt;IntPtr&lt;/code&gt; for the library. We get this &lt;code&gt;IntPtr&lt;/code&gt; using the &lt;code&gt;Load&lt;/code&gt; methods. The &lt;code&gt;Load(string)&lt;/code&gt; method loads the library at a specific path. The other &lt;code&gt;Load&lt;/code&gt; method provides the default &lt;code&gt;DllImport&lt;/code&gt; loading logic. Letâ€™s see how we can use this information:&lt;/p&gt; &lt;pre&gt;static class Library { const string MyLibrary = "mylibrary"; static Library() { NativeLibrary.SetDllImportResolver(typeof(Library).Assembly, ImportResolver); } private static IntPtr ImportResolver(string libraryName, Assembly assembly, DllImportSearchPath? searchPath) { IntPtr libHandle = IntPtr.Zero; if (libraryName == MyLibrary) { // Try using the system library 'libmylibrary.so.5' NativeLibrary.TryLoad("libmylibrary.so.5", assembly, DllImportSearchPath.System32, out libHandle); } return libHandle; } [DllImport(MyLibrary)] public static extern int foo(); } &lt;/pre&gt; &lt;p&gt;In this example, we register a &lt;code&gt;DllImportResolver&lt;/code&gt; for the assembly. In our resolver, we try loading &lt;code&gt;libmylibrary.so.5&lt;/code&gt; from the system libraries. If it fails, we fall back to the default &lt;code&gt;DllImport&lt;/code&gt; resolution by returning &lt;code&gt;IntPtr.Zero&lt;/code&gt;. This result gives us the usability of &lt;code&gt;DllImport&lt;/code&gt; with the flexibility of picking a specific library at runtime.&lt;/p&gt; &lt;p&gt;Another thing we can do using &lt;code&gt;NativeLibrary&lt;/code&gt; is directly resolve symbols using &lt;code&gt;GetExport&lt;/code&gt;/&lt;code&gt;TryGetExport&lt;/code&gt;. Let&amp;#8217;s look at an example:&lt;/p&gt; &lt;pre&gt;class Library : IDisposable { private readonly IntPtr _libHandle; private readonly Func&amp;#60;int&amp;#62; _foo; private bool _disposed; public Library() { _libHandle = NativeLibrary.Load("mylibrary", typeof(Library).Assembly, DllImportSearchPath.System32); if (NativeLibrary.TryGetExport(_libHandle, "foo", out IntPtr fooHandle)) { _foo = Marshal.GetDelegateForFunctionPointer&amp;#60;Func&amp;#60;int&amp;#62;&amp;#62;(fooHandle); } else { _foo = () =&amp;#62; { throw new NotSupportedException("'foo' not found"); }; } } ~Library() { Dispose(false); } public int foo() { ThrowIfDisposed(); return _foo(); } public void Dispose() { Dispose(true); GC.SuppressFinalize(this); } protected virtual void Dispose(bool disposing) { if (!_disposed) { _disposed = true; NativeLibrary.Free(_libHandle); } } private void ThrowIfDisposed() { if (_disposed) { ThrowObjectDisposedException(); } } private void ThrowObjectDisposedException() =&amp;#62; throw new ObjectDisposedException(typeof(Library).FullName); } &lt;/pre&gt; &lt;p&gt;Here we&amp;#8217;ve replaced the &lt;code&gt;DllImport&lt;/code&gt; with calls to &lt;code&gt;NativeLibrary.Load&lt;/code&gt;, &lt;code&gt;TryGetExport&lt;/code&gt; and &lt;code&gt;Marshal.GetDelegateForFunctionPointer&lt;/code&gt;. There&amp;#8217;s more code involved, but in return we now have full control over the library we are using and can detect and use its symbols dynamically.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;In this article, youâ€™ve learned about the new &lt;code&gt;NativeLibrary&lt;/code&gt; class and how you can use itâ€”instead of the &lt;code&gt;DllImport&lt;/code&gt; attributeâ€”when you need more control over the library resolution and the symbols you use.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F06%2Finteracting-with-native-libraries-in-net-core-3-0%2F&amp;#38;linkname=Interacting%20with%20native%20libraries%20in%20.NET%20Core%203.0" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F06%2Finteracting-with-native-libraries-in-net-core-3-0%2F&amp;#38;linkname=Interacting%20with%20native%20libraries%20in%20.NET%20Core%203.0" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F06%2Finteracting-with-native-libraries-in-net-core-3-0%2F&amp;#38;linkname=Interacting%20with%20native%20libraries%20in%20.NET%20Core%203.0" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F06%2Finteracting-with-native-libraries-in-net-core-3-0%2F&amp;#38;linkname=Interacting%20with%20native%20libraries%20in%20.NET%20Core%203.0" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F06%2Finteracting-with-native-libraries-in-net-core-3-0%2F&amp;#38;linkname=Interacting%20with%20native%20libraries%20in%20.NET%20Core%203.0" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F06%2Finteracting-with-native-libraries-in-net-core-3-0%2F&amp;#38;linkname=Interacting%20with%20native%20libraries%20in%20.NET%20Core%203.0" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F06%2Finteracting-with-native-libraries-in-net-core-3-0%2F&amp;#38;linkname=Interacting%20with%20native%20libraries%20in%20.NET%20Core%203.0" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F06%2Finteracting-with-native-libraries-in-net-core-3-0%2F&amp;#038;title=Interacting%20with%20native%20libraries%20in%20.NET%20Core%203.0" data-a2a-url="https://developers.redhat.com/blog/2019/09/06/interacting-with-native-libraries-in-net-core-3-0/" data-a2a-title="Interacting with native libraries in .NET Core 3.0"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/06/interacting-with-native-libraries-in-net-core-3-0/"&gt;Interacting with native libraries in .NET Core 3.0&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/k4XFvqN13yE" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;NativeLibrary is a new class in .NET Core 3.0 for interacting with native libraries. In this article, we&amp;#8217;ll take a closer look. DllImport .NET makes it simple to call functions from a native library using DllImport: [DllImport("mylibrary")] public static extern int foo(); This code makes available the function foo from the native library mylibrary. This [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/06/interacting-with-native-libraries-in-net-core-3-0/"&gt;Interacting with native libraries in .NET Core 3.0&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/09/06/interacting-with-native-libraries-in-net-core-3-0/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">622537</post-id><dc:creator>Tom Deseyn</dc:creator><dc:date>2019-09-06T13:38:43Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/09/06/interacting-with-native-libraries-in-net-core-3-0/</feedburner:origLink></entry><entry><title>New Security Features in WildFly 18</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/uxT3c6UaBk4/new-security-features-in-wildfly-18" /><category term="Elytron" scheme="searchisko:content:tags" /><category term="feed_group_name_aggregated" scheme="searchisko:content:tags" /><category term="feed_name_fjuma" scheme="searchisko:content:tags" /><category term="new features" scheme="searchisko:content:tags" /><category term="wildfly 18" scheme="searchisko:content:tags" /><author><name>Farah Juma</name></author><id>searchisko:content:id:jbossorg_blog-new_security_features_in_wildfly_18</id><updated>2019-09-06T13:37:44Z</updated><published>2019-09-05T23:08:58Z</published><content type="html">&lt;!-- [DocumentBodyStart:9ceaa560-8018-4646-a361-50d4fcb4c01b] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p&gt;Since WildFly 18 will be released in a few weeks, just wanted to highlight the new security features that will be included in this release.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Certificate Authority Configuration&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Since WildFly 14, it's possible to obtain and manage certificates from Let&amp;#8217;s Encrypt using the WildFly CLI. WildFly 18 now adds the ability to make use of any certificate authority that implements the &lt;a class="jive-link-external-small" href="https://tools.ietf.org/html/rfc8555" rel="nofollow"&gt;Automatic Certificate Management Environment (ACME) protocol&lt;/a&gt;. More details can be found in this &lt;a class="jive-link-external-small" href="https://dvilkola.wordpress.com/2019/06/11/obtain-and-manage-certificates-from-any-server-instance-that-implements-acme-specification-using-the-wildfly-cli/" rel="nofollow"&gt;blog post&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Simplified SSL Configuration with Let&amp;#8217;s Encrypt&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;It is now possible to use the &lt;span style="font-family: 'courier new', courier;"&gt;ssl enable-ssl-management&lt;/span&gt; and &lt;span style="font-family: 'courier new', courier;"&gt;enable-ssl-http-server&lt;/span&gt; commands to easily enable one-way and two-way SSL using certificates obtained automatically from Let&amp;#8217;s Encrypt. Details on how to get started with these commands can be found &lt;a class="jive-link-external-small" href="https://github.com/wildfly/wildfly/blob/master/docs/src/main/asciidoc/_admin-guide/CLI_Recipes.adoc#security-commands" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;SSL Certificate Revocation Checking using OCSP&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Certificate revocation checks can now be performed using the Online Certificate Status Protocol (OCSP) in addition to certificate revocation lists (CRL). Details on how to configure an Elytron trust manager to perform certificate revocation checks can be found &lt;a class="jive-link-external-small" href="https://github.com/wildfly/wildfly/blob/master/docs/src/main/asciidoc/_elytron/Using_the_Elytron_Subsystem.adoc#configure-certificate-revocation-in-trust-manager" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Enhanced X509Certificate Identity Mapping&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Prior to WildFly 18, the mapping of an X.509 certificate chain to an identity was done by taking the subject distinguished name from the first certificate in the X.509 certificate chain as an X.500 principal. It is now possible to map an X.509 certificate chain to an identity by using a subject alternative name from the first certificate in the X.509 certificate chain. For a complete overview of this feature, take a look at this &lt;a class="jive-link-blog-small" data-containerId="5158" data-containerType="37" data-objectId="6299" data-objectType="38" href="https://developer.jboss.org/people/fjuma/blog/2019/06/11/mapping-an-x509-cert-to-an-identity-using-a-subject-alt-name"&gt;blog post&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Identity Attribute Aggregation&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Elytron already had a very flexible approach for assigning roles and permissions to an identity based on arbitrary attributes loaded by a security realm. This feature adds support for loading the attributes from multiple security realms and aggregating the results together. Check out this &lt;a class="jive-link-external-small" href="http://darranl.blogspot.com/2019/06/wildfly-elytron-aggregation-of.html" rel="nofollow"&gt;blog post&lt;/a&gt; for more details on this feature.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Aggregate Realm Principal Transformer Configuration&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;It is now possible to configure a principal transformer for an aggregate realm that will be used to transform the principal after the authentication identity is obtained but before the authorization identity is obtained. A complete example on how to configure and make use of this principal transformer can be found &lt;a class="jive-link-blog-small" data-containerId="5403" data-containerType="37" data-objectId="6318" data-objectType="38" href="https://developer.jboss.org/people/aabdelsa/blog/2019/09/06/configuring-an-aggregate-realm-with-a-principal-transformer"&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Enhanced Audit Logging&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Support for both &lt;a class="jive-link-external-small" href="https://tools.ietf.org/html/rfc5424" rel="nofollow"&gt;RFC 5424&lt;/a&gt; and &lt;a class="jive-link-external-small" href="https://tools.ietf.org/html/rfc3164" rel="nofollow"&gt;RFC 3164&lt;/a&gt; have now been added to Elytron&amp;#8217;s audit logging capabilities as well as the ability to configure how many times Elytron should attempt to send messages to a syslog server when an error is encountered during sending. More details on this feature can be found &lt;a class="jive-link-external-small" href="https://justinwildfly.blogspot.com/2019/08/enhanced-audit-logging-in-wildfly.html" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Masked Password Support&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;It is now possible to specify masked passwords when using the Elytron Authentication Client. Check out this &lt;a class="jive-link-blog-small" data-containerId="5403" data-containerType="37" data-objectId="6322" data-objectType="38" href="https://developer.jboss.org/people/aabdelsa/blog/2019/09/05/support-for-masked-passwords-in-the-client-xml-configuration"&gt;blog post&lt;/a&gt; for examples on how to make use of masked passwords.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Where to Find More Information&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;As always, be sure to check out our &lt;a class="jive-link-wiki-small" data-containerId="2303" data-containerType="14" data-objectId="56082" data-objectType="102" href="https://developer.jboss.org/docs/DOC-56082"&gt;blog posts&lt;/a&gt; page, where we collect references to all our blog posts on Elytron features. If there is an Elytron topic you&amp;#8217;d like to see a blog post on, feel free to leave a comment on that page to ask for it. Questions on Elytron are also welcome on WildFly&amp;#8217;s &lt;a class="jivecontainerTT-hover-container jive-link-community-small" data-containerId="1" data-containerType="14" data-objectId="2303" data-objectType="14" href="https://developer.jboss.org/community/wildfly?view=discussions"&gt;user forums&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;To learn more about the Elytron subsystem, take a look at the Elytron &lt;a class="jive-link-external-small" href="https://github.com/wildfly/wildfly/blob/master/docs/src/main/asciidoc/_elytron/Using_the_Elytron_Subsystem.adoc" rel="nofollow"&gt;documentation&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:9ceaa560-8018-4646-a361-50d4fcb4c01b] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/uxT3c6UaBk4" height="1" width="1" alt=""/&gt;</content><summary>Since WildFly 18 will be released in a few weeks, just wanted to highlight the new security features that will be included in this release. Â  Certificate Authority Configuration Â  Since WildFly 14, it's possible to obtain and manage certificates from Letâ€™s Encrypt using the WildFly CLI. WildFly 18 now adds the ability to make use of any certificate authority that implements the Automatic Certifica...</summary><dc:creator>Farah Juma</dc:creator><dc:date>2019-09-05T23:08:58Z</dc:date><feedburner:origLink>https://developer.jboss.org/people/fjuma/blog/2019/09/05/new-security-features-in-wildfly-18</feedburner:origLink></entry><entry><title>Upcoming support for automatic updates of credential stores</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/1U2-HX4nE-o/automatic-updates-of-credential-stores" /><category term="automatic updates" scheme="searchisko:content:tags" /><category term="credential store" scheme="searchisko:content:tags" /><category term="feed_group_name_aggregated" scheme="searchisko:content:tags" /><category term="feed_name_fjuma" scheme="searchisko:content:tags" /><category term="wildfly elytron" scheme="searchisko:content:tags" /><author><name>Farah Juma</name></author><id>searchisko:content:id:jbossorg_blog-upcoming_support_for_automatic_updates_of_credential_stores</id><updated>2019-09-05T22:18:35Z</updated><published>2019-09-05T22:18:35Z</published><content type="html">&lt;!-- [DocumentBodyStart:d077c36e-540b-467d-9853-96cdb6ca16e9] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p&gt;One of the new security features that we have been working on is adding support for automatic updates of credential stores. Although this feature didn&amp;#8217;t make it into WildFly 18, the plan is to have it included in WildFly 19. This blog post will give an introduction to this new feature.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Credential References&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;A credential store allows for secure storage of credentials. It is possible to populate and manipulate a credential store using the WildFly CLI. Once a credential has been added to a credential store, it is possible to reference the stored credential. In particular, many resources across WildFly&amp;#8217;s management model support a &lt;span style="font-family: 'courier new', courier;"&gt;credential-reference&lt;/span&gt; attribute that can be used either to specify a &lt;span style="font-family: 'courier new', courier;"&gt;clear-text&lt;/span&gt; password or to cross-reference a credential from a configured credential store. As an example, when configuring a &lt;span style="font-family: 'courier new', courier;"&gt;key-store&lt;/span&gt; in the Elytron subsystem, a &lt;span style="font-family: 'courier new', courier;"&gt;credential-reference&lt;/span&gt; is used to specify the credential that should be used to access the keystore. This can be configured as follows:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;First, let's configure a &lt;span style="font-family: 'courier new', courier;"&gt;credential-store&lt;/span&gt; (note that the &lt;span style="font-family: 'courier new', courier;"&gt;mycredstore.cs&lt;/span&gt; file doesn&amp;#8217;t need to exist yet):&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;!--[CodeBlockStart:ed5f902e-0c87-48f2-85d4-eae8344428a2][excluded]--&gt;&lt;pre class="plain" name="code"&gt;/subsystem=elytron/credential-store=myCredStore:add(location=mycredstore.cs, relative-to=jboss.server.config.dir, credential-reference={clear-text=StorePassword}, create=true)&lt;/pre&gt;&lt;!--[CodeBlockEnd:ed5f902e-0c87-48f2-85d4-eae8344428a2]--&gt;&lt;div style="display:none;"&gt;&lt;/div&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Next, we'll add a credential to our &lt;span style="font-family: 'courier new', courier;"&gt;credential-store&lt;/span&gt;:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;!--[CodeBlockStart:ff6405ac-87f4-4ec2-9fc8-4ad3718326e3][excluded]--&gt;&lt;pre class="plain" name="code"&gt;/subsystem=elytron/credential-store=myCredStore:add-alias(alias=example, secret-value=mySecretPassword)&lt;/pre&gt;&lt;!--[CodeBlockEnd:ff6405ac-87f4-4ec2-9fc8-4ad3718326e3]--&gt;&lt;div style="display:none;"&gt;&lt;/div&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Finally, we can configure a &lt;span style="font-family: 'courier new', courier;"&gt;key-store&lt;/span&gt; and reference this newly added credential:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;!--[CodeBlockStart:a8cd1ba1-e1f4-449a-b73c-86906fdb6efb][excluded]--&gt;&lt;pre class="plain" name="code"&gt;/subsystem=elytron/key-store=myKS:add(relative-to=jboss.server.config.dir, path=my.keystore, type=JCEKS, credential-reference={store=myCredStore, alias=example})&lt;/pre&gt;&lt;!--[CodeBlockEnd:a8cd1ba1-e1f4-449a-b73c-86906fdb6efb]--&gt;&lt;div style="display:none;"&gt;&lt;/div&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Notice that the &lt;span style="font-family: 'courier new', courier;"&gt;credential-reference&lt;/span&gt; has two attributes, &lt;span style="font-family: 'courier new', courier;"&gt;store&lt;/span&gt; and &lt;span style="font-family: 'courier new', courier;"&gt;alias&lt;/span&gt;. The &lt;span style="font-family: 'courier new', courier;"&gt;store&lt;/span&gt; attribute indicates the credential store. The &lt;span style="font-family: 'courier new', courier;"&gt;alias&lt;/span&gt; attribute indicates the entry in the credential store that holds our credential.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Automatic Updates&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Instead of needing to first add a credential to a configured credential store in order to reference it from a &lt;span style="font-family: 'courier new', courier;"&gt;credential-reference&lt;/span&gt;, WildFly 19 will add the ability to automatically add a credential to a previously defined credential store by specifying both the &lt;span style="font-family: 'courier new', courier;"&gt;store&lt;/span&gt; and &lt;span style="font-family: 'courier new', courier;"&gt;clear-text&lt;/span&gt; attributes for a &lt;span style="font-family: 'courier new', courier;"&gt;credential-reference&lt;/span&gt;. In particular, when configuring a new &lt;span style="font-family: 'courier new', courier;"&gt;credential-reference&lt;/span&gt; with both the &lt;span style="font-family: 'courier new', courier;"&gt;store&lt;/span&gt; and &lt;span style="font-family: 'courier new', courier;"&gt;clear-text&lt;/span&gt; attributes specified, the following will happen:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;If the &lt;span style="font-family: 'courier new', courier;"&gt;alias&lt;/span&gt; attribute is also specified, one of the following will occur:&lt;ul&gt;&lt;li&gt;If the configured credential store does not contain an entry for the given &lt;span style="font-family: 'courier new', courier;"&gt;alias&lt;/span&gt;, a new entry will be added to the credential store to hold the clear text password that was specified. The &lt;span style="font-family: 'courier new', courier;"&gt;clear-text&lt;/span&gt; attribute will then be removed from the management model.&lt;/li&gt;&lt;li&gt;If the credential store does contain an entry for the given &lt;span style="font-family: 'courier new', courier;"&gt;alias&lt;/span&gt;, the existing credential will be replaced with the clear text password that was specified. The &lt;span style="font-family: 'courier new', courier;"&gt;clear-text&lt;/span&gt; attribute will then be removed from the management model.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;If the &lt;span style="font-family: 'courier new', courier;"&gt;alias&lt;/span&gt; attribute is not specified, an alias will be generated and a new entry will be added to the credential store to hold the clear text password that was specified. The &lt;span style="font-family: 'courier new', courier;"&gt;clear-text&lt;/span&gt; attribute will then be removed from the management model.&lt;/li&gt;&lt;/ul&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;As an example, let&amp;#8217;s configure another &lt;span style="font-family: 'courier new', courier;"&gt;credential-store&lt;/span&gt; in the Elytron subsystem:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;!--[CodeBlockStart:872f4a79-a301-4f36-97f0-b2ede388248d][excluded]--&gt;&lt;pre class="plain" name="code"&gt;/subsystem=elytron/credential-store=myNewCredStore:add(location=mynewcredstore.cs, relative-to=jboss.server.config.dir, credential-reference={clear-text=StorePassword}, create=true)&lt;/pre&gt;&lt;!--[CodeBlockEnd:872f4a79-a301-4f36-97f0-b2ede388248d]--&gt;&lt;div style="display:none;"&gt;&lt;/div&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Now, going back to our keystore example, from WildFly 19, it will be possible to configure a &lt;span style="font-family: 'courier new', courier;"&gt;key-store&lt;/span&gt; with a &lt;span style="font-family: 'courier new', courier;"&gt;credential-reference&lt;/span&gt; that specifies the &lt;span style="font-family: 'courier new', courier;"&gt;store&lt;/span&gt;, &lt;span style="font-family: 'courier new', courier;"&gt;alias&lt;/span&gt;, and &lt;span style="font-family: 'courier new', courier;"&gt;clear-text&lt;/span&gt; attributes as follows:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;!--[CodeBlockStart:f62fcf6c-3d2e-425e-b2b7-b1f2b106c6c9][excluded]--&gt;&lt;pre class="plain" name="code"&gt;/subsystem=elytron/key-store=newKS:add(relative-to=jboss.server.config.dir, path=new.keystore, type=JCEKS, credential-reference={store=myNewCredStore, alias=myNewAlias, clear-text=myNewPassword}) { &amp;#160;&amp;#160;&amp;#160; "outcome" =&amp;gt; "success", &amp;#160;&amp;#160;&amp;#160; "result" =&amp;gt; {"credential-store-update" =&amp;gt; { &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; "status" =&amp;gt; "new-entry-added", &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; "new-alias" =&amp;gt; "myNewAlias" &amp;#160;&amp;#160;&amp;#160; }} }&lt;/pre&gt;&lt;!--[CodeBlockEnd:f62fcf6c-3d2e-425e-b2b7-b1f2b106c6c9]--&gt;&lt;div style="display:none;"&gt;&lt;/div&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;The above command will result in a new entry being added to our credential store, &lt;span style="font-family: 'courier new', courier;"&gt;myNewCredStore&lt;/span&gt;, with alias &lt;span style="font-family: 'courier new', courier;"&gt;myNewAlias&lt;/span&gt; and credential &lt;span style="font-family: 'courier new', courier;"&gt;myNewPassword&lt;/span&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;When updating an existing &lt;span style="font-family: 'courier new', courier;"&gt;credential-reference&lt;/span&gt; attribute that contains both the &lt;span style="font-family: 'courier new', courier;"&gt;alias&lt;/span&gt; and &lt;span style="font-family: 'courier new', courier;"&gt;store&lt;/span&gt; attributes to also specify the &lt;span style="font-family: 'courier new', courier;"&gt;clear-text&lt;/span&gt; attribute, the existing credential in the configured credential store will be replaced with the clear text password that was specified. The &lt;span style="font-family: 'courier new', courier;"&gt;clear-text&lt;/span&gt; attribute will then be removed from the management model. As an example, the following command will result in updating the credential for the &lt;span style="font-family: 'courier new', courier;"&gt;myNewAlias&lt;/span&gt; entry that was just added to our credential store:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;!--[CodeBlockStart:64a6c62c-7575-4e1f-82bf-0aff987f054b][excluded]--&gt;&lt;pre class="plain" name="code"&gt;/subsystem=elytron/key-store=newKS:write-attribute(name=credential-reference.clear-text,value=myUpdatedPassword) { &amp;#160;&amp;#160;&amp;#160; "outcome" =&amp;gt; "success", &amp;#160;&amp;#160;&amp;#160; "result" =&amp;gt; {"credential-store-update" =&amp;gt; {"status" =&amp;gt; "existing-entry-updated"}}, &amp;#160;&amp;#160;&amp;#160; "response-headers" =&amp;gt; { &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; "operation-requires-reload" =&amp;gt; true, &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; "process-state" =&amp;gt; "reload-required" &amp;#160;&amp;#160;&amp;#160; } }&lt;/pre&gt;&lt;!--[CodeBlockEnd:64a6c62c-7575-4e1f-82bf-0aff987f054b]--&gt;&lt;div style="display:none;"&gt;&lt;/div&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Summary&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;This blog post has given an introduction to the upcoming support for automatic updates of credential stores.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;For more details on this feature and updates on the status of this feature, keep an eye on &lt;a class="jive-link-external-small" href="https://issues.jboss.org/browse/WFCORE-4150" rel="nofollow"&gt;WFCORE-4150&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:d077c36e-540b-467d-9853-96cdb6ca16e9] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/1U2-HX4nE-o" height="1" width="1" alt=""/&gt;</content><summary>One of the new security features that we have been working on is adding support for automatic updates of credential stores. Although this feature didnâ€™t make it into WildFly 18, the plan is to have it included in WildFly 19. This blog post will give an introduction to this new feature. Â  Credential References Â  A credential store allows for secure storage of credentials. It is possible to populate...</summary><dc:creator>Farah Juma</dc:creator><dc:date>2019-09-05T22:18:35Z</dc:date><feedburner:origLink>https://developer.jboss.org/people/fjuma/blog/2019/09/05/automatic-updates-of-credential-stores</feedburner:origLink></entry><entry><title>Red Hat OpenShift 4 on your laptop: Introducing Red Hat CodeReady Containers</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/fAlzLX4vHE8/" /><category term="Cloud" /><category term="Containers" /><category term="Developer Tools" /><category term="OpenShift" /><category term="Red Hat CodeReady Containers" /><category term="CodeReady Workspaces" /><category term="container" /><category term="Red Hat OpenShift" /><author><name>CodeReady Container Team</name></author><id>https://developers.redhat.com/blog/?p=624577</id><updated>2019-09-05T13:35:37Z</updated><published>2019-09-05T13:35:37Z</published><content type="html">&lt;p&gt;We are pleased to announce that Red Hat CodeReady Containers is now available as a Developer Preview. CodeReady Containers brings a minimal, preconfigured OpenShift 4.1 or newer cluster to your local laptop or desktop computer for development and testing purposes. CodeReady Containers supports native hypervisors for Linux, macOS, and Windows 10. You can download CodeReady Containers from &lt;a href="https://cloud.redhat.com/openshift/install/crc/installer-provisioned?intcmp=7013a000002CtetAAC"&gt;the CodeReady Containers product page on cloud.redhat.com&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;CodeReady Containers is designed for local development and testing on an OpenShift 4 cluster. For running an OpenShift 3 cluster locally, see &lt;a href="https://developers.redhat.com/products/cdk/overview"&gt;Red Hat Container Development Kit (CDK)&lt;/a&gt; or &lt;a href="https://github.com/minishift/minishift"&gt;Minishift&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;In this article, weâ€™ll look at the features and benefits of CodeReady Containers, show a demo of how easy it is to create a local Red Hat OpenShift 4 cluster, and show how to deploy an application on top of it.&lt;br /&gt; &lt;span id="more-624577"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;Prerequisites&lt;/h3&gt; &lt;p&gt;CodeReady Containers requires the following minimum system resources to run Red Hat OpenShift:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;4 virtual CPUs (vCPUs)&lt;/li&gt; &lt;li&gt;8 GB of memory&lt;/li&gt; &lt;li&gt;35 GB of storage space&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You will also require the native hypervisor for your host operating system. CodeReady Containers currently supports libvirt for Linux, HyperKit for macOS, and Hyper-V for Windows.&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s a brief walk-through of getting the bits, all the way through getting an app deployed.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-626367 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/crc-beta-small-1024x525.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/crc-beta-small.gif" alt="" width="1575" height="808" /&gt;&lt;/p&gt; &lt;h3&gt;Download &amp;#38; install&lt;/h3&gt; &lt;p&gt;You can download CodeReady Containers from &lt;a href="https://cloud.redhat.com/openshift/install/crc/installer-provisioned?intcmp=7013a000002CtetAAC"&gt;the CodeReady Containers landing page on cloud.redhat.com&lt;/a&gt;. To install CodeReady Containers, extract the downloaded archive its contents, and add the extracted &lt;code&gt;crc&lt;/code&gt; binary to your &lt;code&gt;PATH&lt;/code&gt; environment variable. On Linux and macOS, you can extract the contents of the &lt;code&gt;.tar.xz&lt;/code&gt; archive using the &lt;code&gt;tar xvf &lt;/code&gt; command.&lt;/p&gt; &lt;h3&gt;Configuration&lt;/h3&gt; &lt;p&gt;Once CodeReady Containers has been installed, set up your host environment with the &lt;code&gt;crc setup&lt;/code&gt; command. This command must be run before starting the OpenShift cluster. This command should be run with your regular user account but will request elevated privileges when modifications are needed. Ensure that your user account is capable of elevating privileges.&lt;/p&gt; &lt;pre&gt;$ crc setup &lt;/pre&gt; &lt;h3&gt;Start your OpenShift 4 cluster&lt;/h3&gt; &lt;p&gt;After your host environment has been set up with the &lt;code&gt;crc setup&lt;/code&gt; command, you can start the OpenShift cluster with the &lt;code&gt;crc start&lt;/code&gt; command. When prompted, supply your user pull secret for the cluster. Your user pull secret can be copied or downloaded from the &lt;a href="https://cloud.redhat.com/openshift/install/crc/installer-provisioned?intcmp=7013a000002CtetAAC"&gt;CodeReady Containers landing page on cloud.redhat.com&lt;/a&gt; under the &lt;em&gt;Pull Secret&lt;/em&gt; section. A Red Hat account is required to access the user pull secret.&lt;/p&gt; &lt;pre&gt;$ crc start &lt;/pre&gt; &lt;p&gt;That&amp;#8217;s it!&lt;/p&gt; &lt;p&gt;You should now have a running Red Hat OpenShift 4 cluster in no time.&lt;/p&gt; &lt;h3&gt;Using your cluster&lt;/h3&gt; &lt;p&gt;CodeReady Containers includes a cached OpenShift client binary (&lt;code&gt;oc&lt;/code&gt;). You can use this cached &lt;code&gt;oc&lt;/code&gt; binary to interact with the running OpenShift cluster by running the &lt;code&gt;crc oc-env&lt;/code&gt; command and following the printed instructions. Once the environment has been set up to use the cached &lt;code&gt;oc&lt;/code&gt; binary, you can log in to the cluster as the &lt;code&gt;developer&lt;/code&gt; user, as follows:&lt;/p&gt; &lt;pre&gt;$ eval $(crc oc-env) $ oc login -u developer -p developer &lt;/pre&gt; &lt;p&gt;Now weâ€™ll create a sample &lt;code&gt;httpd&lt;/code&gt; application deployment. Once you are logged in with &lt;code&gt;oc&lt;/code&gt;, create a new project:&lt;/p&gt; &lt;pre&gt;$ oc new-project myproject &lt;/pre&gt; &lt;p&gt;Create the &lt;code&gt;httpd&lt;/code&gt; example application:&lt;/p&gt; &lt;pre&gt;$ oc new-app httpd-example &lt;/pre&gt; &lt;p&gt;Monitor the status of your build to ensure it pushes successfully:&lt;/p&gt; &lt;pre&gt;$ oc logs -f bc/httpd-example [...] Writing manifest to image destination Storing signatures Push successful &lt;/pre&gt; &lt;p&gt;Once the push is successful, get the route to your application and ensure it is functioning properly:&lt;/p&gt; &lt;pre&gt;$ oc get routes NAMEÂ  Â  Â  Â  Â  Â  HOST/PORT Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  PATH SERVICES PORT TERMINATION Â  WILDCARD httpd-example Â  httpd-example-myproject.apps-crc.testingÂ  Â  Â  Â  Â  httpd-example &amp;#60;all&amp;#62; None $ curl -Ik httpd-example-myproject.apps-crc.testing HTTP/1.1 200 OK [...] &lt;/pre&gt; &lt;p&gt;Congratulations, you now have a sample &lt;code&gt;httpd&lt;/code&gt; application running on Red Hat OpenShift 4!&lt;/p&gt; &lt;p&gt;You can also use &lt;code&gt;&lt;a href="https://github.com/openshift/odo"&gt;odo&lt;/a&gt;&lt;/code&gt;, a developer-focused command-line interface for OpenShift, to interact with the OpenShift cluster provided by CodeReady Containers.&lt;/p&gt; &lt;p&gt;For more information about CodeReady Containers, see the &lt;a href="https://code-ready.github.io/crc/"&gt;official CodeReady Containers documentation&lt;/a&gt;. Also, see the video below for a hands-on look.&lt;/p&gt; &lt;h3&gt;Getting help&lt;/h3&gt; &lt;p&gt;If you encounter any issues using CodeReady Containers, see the &lt;a href="https://code-ready.github.io/crc/#troubleshooting-codeready-containers_gsg"&gt;Troubleshooting Red Hat CodeReady Containers&lt;/a&gt; guide. If this does not resolve your issue, &lt;a href="https://bugzilla.redhat.com/enter_bug.cgi?product=OpenShift%20Container%20Platform&amp;#38;component=crc"&gt;create a bug in Bugzilla with the â€˜crcâ€™ component&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;For community discussion, join the #codeready IRC channel on Freenode.&lt;/p&gt; &lt;h3&gt;Acknowledgements&lt;/h3&gt; &lt;p&gt;Many thanks to the CodeReady Container development team, members of the Red Hat OpenShift development team and blog writers/reviewers Kevin Owen, Gerard Braad, Praveen Kumar, and all.&lt;/p&gt; &lt;p&gt;&lt;iframe src="https://www.youtube.com/embed/qogFjV2fJNs" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;span data-mce-type="bookmark" style="display: inline-block; width: 0px; overflow: hidden; line-height: 0;" class="mce_SELRES_start"&gt;ï»¿&lt;/span&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F05%2Fred-hat-openshift-4-on-your-laptop-introducing-red-hat-codeready-containers%2F&amp;#38;linkname=Red%20Hat%20OpenShift%204%20on%20your%20laptop%3A%20Introducing%20Red%20Hat%20CodeReady%20Containers" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F05%2Fred-hat-openshift-4-on-your-laptop-introducing-red-hat-codeready-containers%2F&amp;#38;linkname=Red%20Hat%20OpenShift%204%20on%20your%20laptop%3A%20Introducing%20Red%20Hat%20CodeReady%20Containers" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F05%2Fred-hat-openshift-4-on-your-laptop-introducing-red-hat-codeready-containers%2F&amp;#38;linkname=Red%20Hat%20OpenShift%204%20on%20your%20laptop%3A%20Introducing%20Red%20Hat%20CodeReady%20Containers" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F05%2Fred-hat-openshift-4-on-your-laptop-introducing-red-hat-codeready-containers%2F&amp;#38;linkname=Red%20Hat%20OpenShift%204%20on%20your%20laptop%3A%20Introducing%20Red%20Hat%20CodeReady%20Containers" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F05%2Fred-hat-openshift-4-on-your-laptop-introducing-red-hat-codeready-containers%2F&amp;#38;linkname=Red%20Hat%20OpenShift%204%20on%20your%20laptop%3A%20Introducing%20Red%20Hat%20CodeReady%20Containers" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F05%2Fred-hat-openshift-4-on-your-laptop-introducing-red-hat-codeready-containers%2F&amp;#38;linkname=Red%20Hat%20OpenShift%204%20on%20your%20laptop%3A%20Introducing%20Red%20Hat%20CodeReady%20Containers" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F05%2Fred-hat-openshift-4-on-your-laptop-introducing-red-hat-codeready-containers%2F&amp;#38;linkname=Red%20Hat%20OpenShift%204%20on%20your%20laptop%3A%20Introducing%20Red%20Hat%20CodeReady%20Containers" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F05%2Fred-hat-openshift-4-on-your-laptop-introducing-red-hat-codeready-containers%2F&amp;#038;title=Red%20Hat%20OpenShift%204%20on%20your%20laptop%3A%20Introducing%20Red%20Hat%20CodeReady%20Containers" data-a2a-url="https://developers.redhat.com/blog/2019/09/05/red-hat-openshift-4-on-your-laptop-introducing-red-hat-codeready-containers/" data-a2a-title="Red Hat OpenShift 4 on your laptop: Introducing Red Hat CodeReady Containers"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/05/red-hat-openshift-4-on-your-laptop-introducing-red-hat-codeready-containers/"&gt;Red Hat OpenShift 4 on your laptop: Introducing Red Hat CodeReady Containers&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/fAlzLX4vHE8" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;We are pleased to announce that Red Hat CodeReady Containers is now available as a Developer Preview. CodeReady Containers brings a minimal, preconfigured OpenShift 4.1 or newer cluster to your local laptop or desktop computer for development and testing purposes. CodeReady Containers supports native hypervisors for Linux, macOS, and Windows 10. You can download CodeReady [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/05/red-hat-openshift-4-on-your-laptop-introducing-red-hat-codeready-containers/"&gt;Red Hat OpenShift 4 on your laptop: Introducing Red Hat CodeReady Containers&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">624577</post-id><dc:creator>CodeReady Container Team</dc:creator><dc:date>2019-09-05T13:35:37Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/09/05/red-hat-openshift-4-on-your-laptop-introducing-red-hat-codeready-containers/</feedburner:origLink></entry><entry><title>Why Java is so hot right now</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/YncGa2vlxFg/" /><category term="Java" /><author><name>rhsilva</name></author><id>https://developers.redhat.com/blog/?p=621357</id><updated>2019-09-05T07:00:57Z</updated><published>2019-09-05T07:00:57Z</published><content type="html">&lt;p&gt;The Java platform has become one of the most widely used platforms, with a huge ecosystem in the world of technology. &lt;a href="https://developers.redhat.com/developer-tools/java"&gt;Java&lt;/a&gt; lets developers create applications for several platforms, such as Windows, Linux, embedded systems, and mobile.&lt;/p&gt; &lt;p&gt;Java also has received criticisms, such as: &lt;em&gt;Java is fat;&lt;/em&gt;Â &lt;em&gt;Java takes a lot of memory;&lt;/em&gt;Â &lt;em&gt;Java is verbose&lt;/em&gt;. But, Java was created to solve big problems, not small problems. Of course, you can also solve small problems with Java, but you see the real benefit of Java when you have a big problem, especially when creating solutions for enterprise environments. In this article, we&amp;#8217;ll take a closer look at the current Java ecosystem.&lt;span id="more-621357"&gt;&lt;/span&gt;&lt;br /&gt; Java is great for enterprise environments because of its power to solve complex problems and its multi-platform characteristics, but also because it promotes more security to business promoting backward compatibility and offers solutions based on specifications.&lt;/p&gt; &lt;p&gt;Java has a big ecosystem, with emphasis on &lt;a href="https://developers.redhat.com/videos/youtube/f2EwhTUmeOI/"&gt;Java EE (now Jakarta EE)&lt;/a&gt; that promotes several specifications to solve common problems in the enterprise environment. Some of these specifications are: EJB, JPA, JMS, JAX-RS, JAX-WS, and others. Furthermore, we have the &lt;a href="https://spring.io/"&gt;Spring&lt;/a&gt; ecosystem, although it is not based on specifications but uses some specifications from Java EE.&lt;/p&gt; &lt;h2&gt;Cloud computing and microservices&lt;/h2&gt; &lt;p&gt;The cloud computing concept has changed how developers architect, write, and think about applications. Cloud computing is a set of principles and approaches that aims to provide computing resources as a service (PaaS, IaaS, SaaS).Â  With this, we use only those resources that are necessary to run applications and scale when needed. This way, we can optimize computing resources and consequently optimize costs to business. It is fantastic, but to benefit from cloud computing, applications should be developed according to this approach. With this, the microservices architecture came about as a good approach to architect applications for cloud computing (cloud-native applications).&lt;/p&gt; &lt;p&gt;Microservices architecture breaks a big application (monolith) into many micro-applications or microservices, generally in the business domain. With this, we can scale only the business domains we really need without scaling all of them, thereby gaining fault tolerance as well as resilience. Additionally, microservices architecture lets us explore cloud computing benefits and optimize computing resources.&lt;/p&gt; &lt;h2&gt;Java and cloud computing&lt;/h2&gt; &lt;p&gt;In a cloud-native application approach, the complexity is not in the applications but in the communication between these applications, as well as management and monitoring. In other words, the complexity is about how these applications (microservices) interact with each other and how quickly we can identify problems. With this, the Java platform and its ecosystem have many gaps to solve, which will be discussed below:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Fat JVM: &lt;/strong&gt;Many Java applications start with libraries that are not used, and the JVM will load things that the application doesn&amp;#8217;t need. This is okay when you have a big application that solves complex problems, but is not so good for small applications (like microservices).&lt;/li&gt; &lt;li&gt;&lt;strong&gt;JVM JIT optimization:&lt;/strong&gt; The JVM has &lt;a href="https://www.ibm.com/support/knowledgecenter/en/SSYKE2_8.0.0/com.ibm.java.vm.80.doc/docs/jit_optimize.html"&gt;JIT optimization&lt;/a&gt; that optimizes applications running a long time. In other words, the longer the application life cycle, the more optimization is done. That means it&amp;#8217;s better to run an application for a long time than for a short time. In cloud computing, however, applications are born and die all the time and their life cycle is shorter.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Longer boot time: &lt;/strong&gt;Many Java applications have a long boot time compared to applications written in another language because these applications commonly solve other things at boot time.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Fat packages (war, ear, jar): &lt;/strong&gt;Many Java apps have a large package size, mainly when they have libraries inside them (in lib folder). This can increase the delivery time, degrading the delivery process.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Java EE has no pattern solutions to microservices: &lt;/strong&gt;The Java EE has many important specifications to solve enterprise problems, but it has no specs to solve problems that came from microservice architecture and cloud computing.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Java and Java EE updates are slow: &lt;/strong&gt;Java and Java EE have slow processes for updating features and creating new features. This is bad because the enterprise environment is in continuous change with new challenges all the time.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;With this, the Java ecosystem had several changes and initiatives to solve each gap created by cloud computing and put Java on top again.&lt;/p&gt; &lt;h2&gt;Java initiatives&lt;/h2&gt; &lt;p&gt;The Java platform is a robust platform that promotes many solutions, but to me, the best part of the Java world is the community, which is very strong and hard-working. The Java community has promoted many actions and initiatives that have boosted the Java platform and promoted solutions to bring Java closer to a cloud-native application approach, which many people refer to as c&lt;em&gt;loud-native Java.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;The main actions and initiatives done in the Java ecosystem include: Jakarta EE, Microprofile, new Java release cycle, Java language improvements, JVM improvements, and Quarkus. I&amp;#8217;ll explain how these initiatives have impacted the Java ecosystem.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Jakarta EE: &lt;/strong&gt;Java EE was one of the most import projects at Java ecosystem. Java EE promoted many pattern solutions to enterprise problems, but this project was migrated from Oracle to Eclipse Foundation and had many changes in the work&amp;#8217;s structure. The project is now called &lt;a href="https://jakarta.ee/"&gt;Jakarta EE&lt;/a&gt;; it&amp;#8217;s an umbrella project that promotes pattern solutions (specifications) for the enterprise world and has a new process to approve new features and evolve existing features. Thus, Jakarta EE can evolve quickly and improve more enterprise solutions.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;MicroProfile: &lt;/strong&gt;As mentioned above, Jakarta EE has many good solutions for the enterprise world, but it does not have pattern solutions to many problems in a microservices architecture. &lt;a href="https://microprofile.io/"&gt;MicroProfile&lt;/a&gt; is an umbrella project that promotes many pattern solutions (specifications) for microservices architecture problems. This project has compatibility with Java EE and lets developers more easily create applications using microservices architecture. Some of these specifications are: MicroProfile Config, MicroProfile OpenTracing, MicroProfile RestClient, Microprofile Fault Tolerance, etc.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Java release cycle: &lt;/strong&gt;The Java release cycle changed, and now Java releases occur every six months. It&amp;#8217;s an excellent change, because it permits the Java platform to respond quickly to new challenges and promotes a faster evolution of the Java platform.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Improvements in Java language: &lt;/strong&gt;The Java language has seen several improvements, such as the functional feature, as well as the Jigsaw project, which introduced modularity. With this, we can create thinner Java applications that can easily be scaled.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Improvements in JVM: &lt;/b&gt;The JVM had some issues when used in containers, mainly about measurements of memory and CPU. This was bad because the container is very important to cloud computing. With containers, you don&amp;#8217;t deliver just the application, but the entire environment with all its dependencies. Since Java 9, the JVM has seen many updates that made communication with containers better. With this, the JVM is closer to cloud computing necessities.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Quarkus:Â &lt;/strong&gt;&lt;a href="https://quarkus.io/"&gt;Quarkus&lt;/a&gt; is the latest news in the Java ecosystem and has been at the top of the talks. Quarkus is a project tailored to GraalVM and OpenJDK HotSpot that promotes a Kubernetes Java application stack that lets developers write applications using the best of breed Java libraries and standards. With Quarkus, we can write applications with faster boot time, incredibly low RSS memory, and an amazing set of tools. Quarkus is really an amazing project that defines a new future for the Java platform. This project works with a container-first concept and uses the technique of compile-time boot to boost Java applications.&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;Conclusion&lt;/h3&gt; &lt;p&gt;All of these projects and initiatives in the Java ecosystem bring Java back into focus and start the new era for the Java platform. With this, Java enters the world of cloud computing, offering ways of working with specifications and promoting standardized solutions to cloud computing. These initiatives are amazing both for Java and for cloud computing, because from these standardized solutions will emerge new enterprise solutions that will have the support of many companies, thereby making adoption of these solutions even safer.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F05%2Fwhy-java-is-so-hot-right-now%2F&amp;#38;linkname=Why%20Java%20is%20so%20hot%20right%20now" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F05%2Fwhy-java-is-so-hot-right-now%2F&amp;#38;linkname=Why%20Java%20is%20so%20hot%20right%20now" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F05%2Fwhy-java-is-so-hot-right-now%2F&amp;#38;linkname=Why%20Java%20is%20so%20hot%20right%20now" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F05%2Fwhy-java-is-so-hot-right-now%2F&amp;#38;linkname=Why%20Java%20is%20so%20hot%20right%20now" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F05%2Fwhy-java-is-so-hot-right-now%2F&amp;#38;linkname=Why%20Java%20is%20so%20hot%20right%20now" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F05%2Fwhy-java-is-so-hot-right-now%2F&amp;#38;linkname=Why%20Java%20is%20so%20hot%20right%20now" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F05%2Fwhy-java-is-so-hot-right-now%2F&amp;#38;linkname=Why%20Java%20is%20so%20hot%20right%20now" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F05%2Fwhy-java-is-so-hot-right-now%2F&amp;#038;title=Why%20Java%20is%20so%20hot%20right%20now" data-a2a-url="https://developers.redhat.com/blog/2019/09/05/why-java-is-so-hot-right-now/" data-a2a-title="Why Java is so hot right now"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/05/why-java-is-so-hot-right-now/"&gt;Why Java is so hot right now&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/YncGa2vlxFg" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;The Java platform has become one of the most widely used platforms, with a huge ecosystem in the world of technology. Java lets developers create applications for several platforms, such as Windows, Linux, embedded systems, and mobile. Java also has received criticisms, such as: Java is fat;Â Java takes a lot of memory;Â Java is verbose. But, [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/05/why-java-is-so-hot-right-now/"&gt;Why Java is so hot right now&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/09/05/why-java-is-so-hot-right-now/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">2</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">621357</post-id><dc:creator>rhsilva</dc:creator><dc:date>2019-09-05T07:00:57Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/09/05/why-java-is-so-hot-right-now/</feedburner:origLink></entry><entry><title>Red Hat Summit 2020: Call for Proposals for new developer track</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/4iDe94ICy_k/" /><category term="Events" /><category term="Red Hat Summit" /><author><name>Editorial Team</name></author><id>https://developers.redhat.com/blog/?p=623407</id><updated>2019-09-04T07:01:47Z</updated><published>2019-09-04T07:01:47Z</published><content type="html">&lt;p&gt;Red Hat Developer invites you to share your expertise at &lt;a href="https://www.redhat.com/en/summit"&gt;Red Hat Summit 2020&lt;/a&gt;, April 27-29th in San Francisco California. Submit a proposal now to lead a conference session and share your development story.&lt;/p&gt; &lt;p&gt;Every year, thousands of developers attend Red Hat Summit. New for 2020, you will be able to attend a new track created specifically for application developers.Â  This track will focus on the latest application development technologies, and we need your help.&lt;/p&gt; &lt;p&gt;Red Hat Summit attendees want to hear your stories of success and failure, your best techniques, how your work is changing, architecture tips, DevOps, and what&amp;#8217;s new.Â  Please submit your session ideas based on real-world examples and hands-on instruction. Below are some ideas to help you get started.&lt;span id="more-623407"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Submit your open source application development story at &lt;a href="https://www.redhat.com/en/summit/speakers/submit-a-session"&gt;redhat.com/summit&lt;/a&gt; by October 22, 2019. Include &amp;#8220;Developer:&amp;#8221; as a prefix for your talk summary.Â  If your session is chosen,&lt;strong&gt; youâ€™ll receive a free pass to Red Hat Summit.Â &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Setting up a Continuous Delivery pipeline on Red Hat OpenShift&lt;/li&gt; &lt;li&gt;How to leverage Tekton/OpenShift Pipelines for continuous delivery&lt;/li&gt; &lt;li&gt;Why use GitOps with continuous delivery&lt;/li&gt; &lt;li&gt;Deployment strategies: Blue-green Deployments, A/B Testing, and Canary Releases&lt;/li&gt; &lt;li&gt;Configure a CI/CD pipeline for serverless applications&lt;/li&gt; &lt;li&gt;Security in the continuous delivery pipeline&lt;/li&gt; &lt;li&gt;Success stories in application development with serverless architecture&lt;/li&gt; &lt;li&gt;Implementing serverless using Knative and Quarkus&lt;/li&gt; &lt;li&gt;Leveraging Quarkus to use Java in microservices or serverless architectures&lt;/li&gt; &lt;li&gt;Quarkus enables better microservices architecture for Java devs, necessitating Istio&lt;/li&gt; &lt;li&gt;Developer toolchain on Red Hat OpenShift for cloud development&lt;/li&gt; &lt;li&gt;Managing developer environments for cloud development with Eclipse Che/Red Hat CodeReady Workspaces&lt;/li&gt; &lt;li&gt;Improving your OpenShift workflow with odo&lt;/li&gt; &lt;li&gt;Serverless or microservice security topics&lt;/li&gt; &lt;li&gt;Monitoring applications using Prometheus and Grafana&lt;/li&gt; &lt;li&gt;Debugging microservice applications&lt;/li&gt; &lt;li&gt;Debugging serverless applications&lt;/li&gt; &lt;li&gt;Security and stability of microservice applications&lt;/li&gt; &lt;li&gt;Security and stability of serverless applications&lt;/li&gt; &lt;li&gt;Developing operators for Kubernetes/Openshift&lt;/li&gt; &lt;li&gt;Convert existing application into a Kubernetes/OpenShift Operator&lt;/li&gt; &lt;li&gt;Using Linux in containers (UBI, RHEL, Podman, Buildah, Skopeo)&lt;/li&gt; &lt;li&gt;Success stories of using Java in the cloud&lt;/li&gt; &lt;li&gt;Leveraging Ceph/OpenShift Container Storage in cloud application design&lt;/li&gt; &lt;li&gt;Getting started with service mesh/Istio routing&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a href="https://www.redhat.com/en/summit"&gt;Visit the website&lt;/a&gt; for details on submitting your talk.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F04%2Fred-hat-summit-2020-call-for-proposals-for-new-developer-track%2F&amp;#38;linkname=Red%20Hat%20Summit%202020%3A%20Call%20for%20Proposals%20for%20new%20developer%20track" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F04%2Fred-hat-summit-2020-call-for-proposals-for-new-developer-track%2F&amp;#38;linkname=Red%20Hat%20Summit%202020%3A%20Call%20for%20Proposals%20for%20new%20developer%20track" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F04%2Fred-hat-summit-2020-call-for-proposals-for-new-developer-track%2F&amp;#38;linkname=Red%20Hat%20Summit%202020%3A%20Call%20for%20Proposals%20for%20new%20developer%20track" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F04%2Fred-hat-summit-2020-call-for-proposals-for-new-developer-track%2F&amp;#38;linkname=Red%20Hat%20Summit%202020%3A%20Call%20for%20Proposals%20for%20new%20developer%20track" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F04%2Fred-hat-summit-2020-call-for-proposals-for-new-developer-track%2F&amp;#38;linkname=Red%20Hat%20Summit%202020%3A%20Call%20for%20Proposals%20for%20new%20developer%20track" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F04%2Fred-hat-summit-2020-call-for-proposals-for-new-developer-track%2F&amp;#38;linkname=Red%20Hat%20Summit%202020%3A%20Call%20for%20Proposals%20for%20new%20developer%20track" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F04%2Fred-hat-summit-2020-call-for-proposals-for-new-developer-track%2F&amp;#38;linkname=Red%20Hat%20Summit%202020%3A%20Call%20for%20Proposals%20for%20new%20developer%20track" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F04%2Fred-hat-summit-2020-call-for-proposals-for-new-developer-track%2F&amp;#038;title=Red%20Hat%20Summit%202020%3A%20Call%20for%20Proposals%20for%20new%20developer%20track" data-a2a-url="https://developers.redhat.com/blog/2019/09/04/red-hat-summit-2020-call-for-proposals-for-new-developer-track/" data-a2a-title="Red Hat Summit 2020: Call for Proposals for new developer track"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/04/red-hat-summit-2020-call-for-proposals-for-new-developer-track/"&gt;Red Hat Summit 2020: Call for Proposals for new developer track&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/4iDe94ICy_k" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Red Hat Developer invites you to share your expertise at Red Hat Summit 2020, April 27-29th in San Francisco California. Submit a proposal now to lead a conference session and share your development story. Every year, thousands of developers attend Red Hat Summit. New for 2020, you will be able to attend a new track [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/04/red-hat-summit-2020-call-for-proposals-for-new-developer-track/"&gt;Red Hat Summit 2020: Call for Proposals for new developer track&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">623407</post-id><dc:creator>Editorial Team</dc:creator><dc:date>2019-09-04T07:01:47Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/09/04/red-hat-summit-2020-call-for-proposals-for-new-developer-track/</feedburner:origLink></entry></feed>
